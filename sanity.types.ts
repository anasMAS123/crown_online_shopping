/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type Order = {
  _id: string;
  _type: "order";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  email?: string;
  phone?: string;
  address?: string;
  cart?: Array<{
    item?: string;
    pieces?: number;
    priceBeforeDiscount?: number;
    priceAfterDiscount?: number;
    finalPrice?: number;
    _key: string;
  }>;
};

export type User = {
  _id: string;
  _type: "user";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  id?: string;
  cart?: Array<{
    item?: string;
    pieces?: number;
    _key: string;
  }>;
};

export type Product = {
  _id: string;
  _type: "product";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  image?: string;
  category?: Array<string>;
  description?: string;
  price?: number;
  discountPrice?: number;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | SanityAssetSourceData | Order | User | Product | Slug;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/queries.ts
// Variable: GET_PRODUCTS
// Query: *[_type=='product']
export type GET_PRODUCTSResult = Array<{
  _id: string;
  _type: "product";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  image?: string;
  category?: Array<string>;
  description?: string;
  price?: number;
  discountPrice?: number;
}>;
// Variable: PRODUCT_BY_ID
// Query: *[_type=='product' && _id==$id][0]{  title,   price,   discountPrice,   category,   slug,   image,   description}
export type PRODUCT_BY_IDResult = {
  title: string | null;
  price: number | null;
  discountPrice: number | null;
  category: Array<string> | null;
  slug: Slug | null;
  image: string | null;
  description: string | null;
} | null;
// Variable: USER_BY_ID
// Query: *[_type=='user' && id==$id][0]
export type USER_BY_IDResult = {
  _id: string;
  _type: "user";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  id?: string;
  cart?: Array<{
    item?: string;
    pieces?: number;
    _key: string;
  }>;
} | null;
// Variable: USER_BY_SANITY_ID
// Query: *[_type=='user' && _id ==$id][0]
export type USER_BY_SANITY_IDResult = {
  _id: string;
  _type: "user";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  id?: string;
  cart?: Array<{
    item?: string;
    pieces?: number;
    _key: string;
  }>;
} | null;
// Variable: PRODUCTS_BY_NAME
// Query: *[_type=='product' && title in $array]
export type PRODUCTS_BY_NAMEResult = Array<{
  _id: string;
  _type: "product";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  image?: string;
  category?: Array<string>;
  description?: string;
  price?: number;
  discountPrice?: number;
}>;
// Variable: PRODUCT_BY_NAME
// Query: *[_type=='product' && title == $title]
export type PRODUCT_BY_NAMEResult = Array<{
  _id: string;
  _type: "product";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  image?: string;
  category?: Array<string>;
  description?: string;
  price?: number;
  discountPrice?: number;
}>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type=='product']": GET_PRODUCTSResult;
    "*[_type=='product' && _id==$id][0]{\n  title, \n  price, \n  discountPrice, \n  category, \n  slug, \n  image, \n  description}": PRODUCT_BY_IDResult;
    "*[_type=='user' && id==$id][0]": USER_BY_IDResult;
    "*[_type=='user' && _id ==$id][0]": USER_BY_SANITY_IDResult;
    "*[_type=='product' && title in $array]": PRODUCTS_BY_NAMEResult;
    "*[_type=='product' && title == $title]": PRODUCT_BY_NAMEResult;
  }
}
